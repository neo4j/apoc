plugins {
    id 'java'
    id "me.champeau.jmh" version "0.7.2"
}

repositories {
    mavenCentral()
}

dependencies {
    jmh project(':common')
    jmh project(':core')
    jmh "com.neo4j:neo4j-enterprise:$neo4jVersionEffective"
    jmh "org.neo4j:neo4j:$neo4jVersionEffective"
}

jmh {
    iterations = 5 // Number of measurement iterations to do.
    benchmarkMode = ['thrpt'] // Benchmark mode. Available modes are: [Throughput/thrpt, AverageTime/avgt, SampleTime/sample, SingleShotTime/ss, All/all]
    fork = 1 // How many times to forks a single benchmark. Use 0 to disable forking altogether
    failOnError = false // Should JMH fail immediately if any benchmark had experienced the unrecoverable error?
    forceGC = false // Should JMH force GC between iterations?
    humanOutputFile = project.file("${project.buildDir}/reports/jmh/human.txt") // human-readable output file
    resultsFile = project.file("${project.buildDir}/reports/jmh/results.txt") // results file
    timeOnIteration = '5s' // Time to spend at each measurement iteration.
    resultFormat = 'CSV' // Result format type (one of CSV, JSON, NONE, SCSV, TEXT)
    synchronizeIterations = false // Synchronize iterations?
    threads = 1 // Number of worker threads to run with.
    jmhTimeout = '30s' // Timeout for benchmark iteration.
    verbosity = 'NORMAL' // Verbosity mode. Available modes are: [SILENT, NORMAL, EXTRA]
    warmup = '5s' // Time to spend at each warmup iteration.
    warmupBatchSize = 1 // Warmup batch size: number of benchmark method calls per operation.
    warmupForks = 1 // How many warmup forks to make for a single benchmark. 0 to disable warmup forks.
    warmupIterations = 5 // Number of warmup iterations to do.
    zip64 = true // Use ZIP64 format for bigger archives
}